{"version":3,"sources":["components/Counter.jsx","App.js","index.js"],"names":["Counter","this","props","addOne","add100","increase","count","className","type","onClick","React","Component","App","state","setState","prevState","ReactDOM","render","document","getElementById"],"mappings":"sLAGaA,EAAb,uKAEY,IAAD,EAEqCC,KAAKC,MAAzCC,EAFD,EAECA,OAAQC,EAFT,EAESA,OAAQC,EAFjB,EAEiBA,SAAUC,EAF3B,EAE2BA,MAElC,OACE,yBAAKC,UAAU,WACb,uCAAaD,GACb,4BACEE,KAAK,SACLC,QAAS,kBAAMN,MAFjB,WAQA,4BACEK,KAAK,SACLC,QAAS,kBAAML,MAFjB,WAOA,4BACEI,KAAK,SACLC,QAAS,kBAAMJ,MAFjB,iBAxBR,GAA6BK,IAAMC,WCsCpBC,E,4MArCbC,MAAQ,CACNP,MAAO,G,EAGTH,OAAS,WACP,EAAKW,UAAS,SAAAC,GAAS,MAAK,CAC1BT,MAAOS,EAAUT,MAAQ,O,EAI7BF,OAAS,WACP,EAAKU,UAAS,SAAAC,GAAS,MAAK,CAC1BT,MAAOS,EAAUT,MAAQ,S,EAI7BD,SAAW,WACL,EAAKQ,MAAMP,MAAQ,IAAM,GAC3B,EAAKF,SACL,EAAKD,UAEL,EAAKA,U,uDAKP,OACE,kBAAC,EAAD,CACEA,OAAQF,KAAKE,OACbC,OAAQH,KAAKG,OACbC,SAAUJ,KAAKI,SACfC,MAAOL,KAAKY,MAAMP,Y,GAhCRI,IAAMC,WCCxBK,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.25f34698.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Counter extends React.Component {\n\n  render() {\n\n    const { addOne, add100, increase, count } = this.props;\n\n    return (\n      <div className=\"Counter\">\n        <h1> Count: {count}</h1>\n        <button\n          type=\"button\"\n          onClick={() => addOne()}\n        >\n          Add One\n        </button>\n\n\n        <button\n          type=\"button\"\n          onClick={() => add100()}\n        >\n          Add 100\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => increase()}\n        >\n          increase\n        </button>\n      </div>\n    )\n  }\n};\n\nCounter.propTypes = {\n  addOne: PropTypes.func.isRequired,\n  add100: PropTypes.func.isRequired,\n  increase: PropTypes.func.isRequired,\n  count: PropTypes.number.isRequired,\n};","import React from 'react';\nimport { Counter } from './components/Counter';\n\nclass App extends React.Component {\n  state = {\n    count: 0,\n  }\n\n  addOne = () => {\n    this.setState(prevState => ({\n      count: prevState.count + 1,\n    }));\n  };\n\n  add100 = () => {\n    this.setState(prevState => ({\n      count: prevState.count + 100,\n    }));\n  };\n\n  increase = () => {\n    if (this.state.count % 5 === 0) {\n      this.add100();\n      this.addOne();\n    } else {\n      this.addOne();\n    }\n  };\n\n  render() {\n    return (\n      <Counter\n        addOne={this.addOne}\n        add100={this.add100}\n        increase={this.increase}\n        count={this.state.count}\n      />\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}